{"ast":null,"code":"var _jsxFileName = \"/home/tomita/MeetSphere/frontend/src/components/Calendar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactCalendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = () => {\n  _s();\n  const [date, setDate] = useState(new Date());\n  const handleDateChange = newDate => {\n    setDate(newDate);\n    console.log('Date selected:', newDate);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Select a date to view events.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactCalendar, {\n      onChange: handleDateChange,\n      value: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(Calendar, \"rW+rxy2mJ1oFEB1Cqg4Z2uVJym0=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","ReactCalendar","jsxDEV","_jsxDEV","Calendar","_s","date","setDate","Date","handleDateChange","newDate","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","value","_c","$RefreshReg$"],"sources":["/home/tomita/MeetSphere/frontend/src/components/Calendar.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactCalendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\n\nconst Calendar: React.FC = () => {\n  const [date, setDate] = useState(new Date());\n\n  const handleDateChange = (newDate: Date) => {\n    setDate(newDate);\n    console.log('Date selected:', newDate);\n  };\n\n  return (\n    <div>\n      <h2>Calendar</h2>\n      <p>Select a date to view events.</p>\n      <ReactCalendar onChange={handleDateChange} value={date} />\n    </div>\n  );\n};\n\nexport default Calendar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,aAAa,MAAM,gBAAgB;AAC1C,OAAO,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,QAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAIQ,IAAI,CAAC,CAAC,CAAC;EAE5C,MAAMC,gBAAgB,GAAIC,OAAa,IAAK;IAC1CH,OAAO,CAACG,OAAO,CAAC;IAChBC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,OAAO,CAAC;EACxC,CAAC;EAED,oBACEP,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBd,OAAA;MAAAU,QAAA,EAAG;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACpCd,OAAA,CAACF,aAAa;MAACiB,QAAQ,EAAET,gBAAiB;MAACU,KAAK,EAAEb;IAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEV,CAAC;AAACZ,EAAA,CAfID,QAAkB;AAAAgB,EAAA,GAAlBhB,QAAkB;AAiBxB,eAAeA,QAAQ;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}