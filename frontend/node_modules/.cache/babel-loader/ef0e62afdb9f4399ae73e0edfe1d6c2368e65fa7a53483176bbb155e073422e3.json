{"ast":null,"code":"import React from'react';import{BrowserRouter as Router,Route,Routes}from'react-router-dom';import CalendarPage from'./pages/CalendarPage';// import EventListPage from './pages/EventListPage';\n// import EventPage from './pages/EventPage';\n// import CreateEventPage from './pages/CreateEventPage';\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(CalendarPage,{})}),/*#__PURE__*/_jsx(\"h1\",{children:\"Hello, World\"})]})});};export default App;","map":{"version":3,"names":["React","BrowserRouter","Router","Route","Routes","CalendarPage","jsx","_jsx","jsxs","_jsxs","App","children","path","element"],"sources":["/home/tomita/MeetSphere/frontend/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport CalendarPage from './pages/CalendarPage';\n// import EventListPage from './pages/EventListPage';\n// import EventPage from './pages/EventPage';\n// import CreateEventPage from './pages/CreateEventPage';\n\nconst App: React.FC = () => {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<CalendarPage />} />\n        {/* <Route path=\"/events\" element={<EventListPage />} />\n        <Route path=\"/events/:id\" element={<EventPage />} />\n        <Route path=\"/create-event\" element={<CreateEventPage />} /> */}\n        <h1>Hello, World</h1>\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,aAAa,GAAI,CAAAC,MAAM,CAAEC,KAAK,CAAEC,MAAM,KAAQ,kBAAkB,CACzE,MAAO,CAAAC,YAAY,KAAM,sBAAsB,CAC/C;AACA;AACA;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEA,KAAM,CAAAC,GAAa,CAAGA,CAAA,GAAM,CAC1B,mBACEH,IAAA,CAACL,MAAM,EAAAS,QAAA,cACLF,KAAA,CAACL,MAAM,EAAAO,QAAA,eACLJ,IAAA,CAACJ,KAAK,EAACS,IAAI,CAAC,GAAG,CAACC,OAAO,cAAEN,IAAA,CAACF,YAAY,GAAE,CAAE,CAAE,CAAC,cAI7CE,IAAA,OAAAI,QAAA,CAAI,cAAY,CAAI,CAAC,EACf,CAAC,CACH,CAAC,CAEb,CAAC,CAED,cAAe,CAAAD,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}